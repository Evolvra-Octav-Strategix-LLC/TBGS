# üß± Blueprint: TBGS Headless Setup (React + WordPress)

## 0) Doel

* **Snelste frontend** (Next.js SSG/ISR) + **maximale SEO‚Äëcontrole** (hard‚Äëcoded corepagina‚Äôs, schema, hreflang).
* **Schalen zonder pijn**: NL/BE ‚Üí veel locatie‚Äë en dienstpagina‚Äôs.
* **Content aanpasbaar** in **WP** *√©n* **in code** (hybride).

---

## 1) Architectuur (hoogover)

* **Frontend**: Next.js 14+ (App Router), TypeScript, Vercel/Netlify hosting.
* **CMS**: WordPress (headless) op `https://cms.tbgs.nl`
  Plugins: **WPGraphQL**, **ACF**, **WPGraphQL for ACF**, **RankMath/Yoast**, **WP Webhooks**, **Disable XML‚ÄëRPC**.
* **Contentflow**:

  * 80% dynamisch uit WP (locaties, diensten, kennisbank).
  * 20% ‚Äúhard‚Äëcoded‚Äù in code (homepage, top‚Äëlandings).
* **Revalidate**: WP ‚Üí webhook ‚Üí Next `/api/revalidate` ‚Üí pagina ververst.

---

## 2) URL‚Äëstructuur (SEO‚Äëproof)

```
/nl/                         (NL hub of home)
/nl/locaties/eindhoven
/nl/totaal-dak-specialist/eindhoven
/nl/totaal-schoorsteen-specialist/nuenen
/be/                         (BE hub)
/be/locaties/lommel
/be/totaal-onderhoud-specialist/pelt
/kennisbank/[artikel-slug]
/diensten/[dienst-slug]      (generieke dienstpagina‚Äôs)
```

**Regels**

* Slugs altijd lowercase, koppeltekens.
* NL/BE duidelijk gescheiden voor hreflang en Search Console segmentatie.

---

## 3) WordPress Contentmodel (ACF)

**Custom Post Types (CPT)**

* `locaties` (stad/dorp; NL/BE)
* `diensten` (dak, schoorsteen, onderhoud, bouw)
* `kennisbank` (vraaggestuurde artikelen)

**ACF velden (per CPT)**

* `country` (select: nl | be)
* `city` (string)
* `specialist` (select: TDS | TSS | TOS | TBS) ‚Äî *alleen voor specialist√ólocatie posts* of gebruik relation naar `diensten`
* `intro` (text)
* `body` (WYSIWYG/blocks)
* `faq` (repeater: question, answer)
* `images` (gallery)
* `schema_type` (select: RoofingContractor | ChimneySweep | GeneralContractor | HomeAndConstructionBusiness | LocalBusiness)
* `seo_title`, `seo_description`, `og_image`

**Taxonomie√´n (optioneel)**

* `regio` (Brabant, Limburg BE)
* `plaats` (Eindhoven, Lommel, ‚Ä¶) ‚Äî als je veel hergebruik wil

---

## 4) WPGraphQL Queries (voorbeeld)

**Pagina ophalen op slug (locatiehub):**

```graphql
query CityHub($uri: String!) {
  pageBy(uri: $uri) {
    title
    seo { title metaDesc opengraphImage { sourceUrl } }
    ... on Page {
      acf {
        intro
        body
        faq { question answer }
        images { sourceUrl altText }
        country
        city
      }
    }
  }
}
```

**Specialist √ó Locatie (via CPT ‚Äòlocaties‚Äô):**

```graphql
query SpecialistLocation($city: String!, $country: String!, $specialist: String!) {
  locations(where: {metaQuery: [
    {key:"city",compare:EQUALS,value:$city},
    {key:"country",compare:EQUALS,value:$country},
    {key:"specialist",compare:EQUALS,value:$specialist}
  ]}) {
    nodes {
      title
      seo { title metaDesc }
      acf { intro body faq { question answer } schema_type images { sourceUrl altText } }
      uri
    }
  }
}
```

---

## 5) Next.js Implementatie (kern)

**a) Dynamische routes**

```
app/
  nl/
    locaties/[city]/page.tsx                   ‚Üí City Hub (GraphQL)
    [dienst]/[city]/page.tsx                   ‚Üí Specialist √ó Locatie
  be/
    locaties/[city]/page.tsx
    [dienst]/[city]/page.tsx
  kennisbank/[slug]/page.tsx                   ‚Üí Blog/KB
  api/revalidate/route.ts                      ‚Üí ISR webhook
  layout.tsx                                   ‚Üí globale SEO/hreflang
```

**b) ISR Revalidate API (Vercel)**

```ts
// app/api/revalidate/route.ts
import { NextRequest, NextResponse } from 'next/server';

export async function POST(req: NextRequest) {
  const secret = req.headers.get('x-webhook-secret');
  if (secret !== process.env.REVALIDATE_SECRET) {
    return NextResponse.json({ ok: false }, { status: 401 });
  }

  const { paths } = await req.json(); // array: ['/nl/locaties/eindhoven', '/be/totaal-.../lommel']
  try {
    const revalidated: string[] = [];
    for (const p of paths) {
      // @ts-ignore
      await (global as any).revalidatePath?.(p) // Next 14 app router helper in route handlers
      revalidated.push(p);
    }
    return NextResponse.json({ ok: true, revalidated });
  } catch (e) {
    return NextResponse.json({ ok: false, error: String(e) }, { status: 500 });
  }
}
```

**c) WP Webhook ‚Üí Next**

* In WP Webhooks: bij *publish/update* van `locaties`/`diensten`/`kennisbank` POST naar:

  * `https://www.tbgs.nl/api/revalidate` met header `x-webhook-secret: *****`
  * Body JSON: `{"paths":["/nl/locaties/eindhoven","/nl/totaal-dak-specialist/eindhoven"]}`
    (paths bepaal je server‚Äëside in WP via kleine plugin/snippet)

**d) Content rendering**

* Haal `content`/`body` op en **sanitize** altijd:

```ts
import DOMPurify from 'isomorphic-dompurify';
const html = DOMPurify.sanitize(acf.body, { USE_PROFILES: { html: true } });
```

* Voor FAQ ‚Üí render als `<details><summary>Vraag</summary>Antwoord</details>` + **FAQ schema**.

---

## 6) SEO & Schema

**a) Meta & H1**

* Gebruik `seo_title`, `seo_description` *of* fallback naar formule:

  * Title: `Dakdekker in Eindhoven | Totaal Dak Specialist ‚Äì TBGS`
  * H1: `Uw dakdekker in Eindhoven`

**b) JSON‚ÄëLD templates (dynamic)**

* `LocalBusiness` voor hubpagina‚Äôs; specialist subtype voor specialist√ólocatie:

```json
{
  "@context": "https://schema.org",
  "@type": "RoofingContractor",
  "name": "Totaal Dak Specialist ‚Äì TBGS",
  "areaServed": "Eindhoven",
  "url": "https://www.tbgs.nl/nl/totaal-dak-specialist/eindhoven",
  "image": "https://.../hero.jpg",
  "telephone": "+31 ....",
  "address": { "@type": "PostalAddress", "addressLocality": "Eindhoven", "addressCountry": "NL" },
  "sameAs": ["https://maps.google.com/....", "https://facebook.com/..."]
}
```

**c) Hreflang**

* In `layout.tsx` render:

```html
<link rel="alternate" href="https://www.tbgs.nl/nl/locaties/eindhoven" hreflang="nl-NL" />
<link rel="alternate" href="https://www.tbgs.nl/be/locaties/lommel" hreflang="nl-BE" />
<link rel="alternate" href="https://www.tbgs.nl/" hreflang="x-default" />
```

**d) Sitemaps**

* Next.js route `/sitemap.xml` genereert dynamisch:

  * `/nl/**`, `/be/**`, `/kennisbank/**`, `/diensten/**`
* Eventueel aparte sitemaps per land: `/sitemap-nl.xml`, `/sitemap-be.xml`

---

## 7) Security & Performance

* **WP hardening**: updates, sterke logins, limit login, object cache, CDN.
* **WP alleen contentbron** (geen publiek thema nodig).
* **CORS**: alleen `tbgs.nl` toestaan.
* **CDN/Edge**: Vercel edge caching + ISR (60‚Äì300s).
* **Afbeeldingen**: host in WP maar serve via Next `<Image>` (automatic optimization).

---

## 8) Governance (simpel houden)

* **80/20 regel**:

  * *Dynamisch (WP)*: locatie, specialist√ólocatie, kennisbank.
  * *Hard‚Äëcoded (code)*: home, top‚Äëconversie landings, nav/footer.
* **Content‚Äëowner per type**:

  * Marketing ‚Üí WP content
  * Dev ‚Üí code content/SEO templates
* **Naming**: specialist slugs gefixeerd:

  * `totaal-dak-specialist` (TDS), `totaal-schoorsteen-specialist` (TSS), `totaal-onderhoud-specialist` (TOS), `totaal-bouw-specialist` (TBS)

---

## 9) Deploy & Monitoring

* **Hosting**:

  * Next.js ‚Üí Vercel (prod + preview)
  * WP ‚Üí managed host (bijv. Kinsta/RunCloud + WAF) op `cms.tbgs.nl`
* **Search Console**: aparte properties voor root + `/nl/` + `/be/` mappen (of segmenteren in GSC).
* **KPI‚Äôs**: Local Falcon (Maps), Search Console clicks/posities per map, leads per pagina.

---

## 10) Migratie & 301 (als je al pagina‚Äôs had)

* **Van losse domeinen** ‚Üí 301 naar overeenkomstige submap‚ÄêURL‚Äôs.
* Controleer met crawl (Screaming Frog), fix alle 404‚Äôs, update interne links.

---