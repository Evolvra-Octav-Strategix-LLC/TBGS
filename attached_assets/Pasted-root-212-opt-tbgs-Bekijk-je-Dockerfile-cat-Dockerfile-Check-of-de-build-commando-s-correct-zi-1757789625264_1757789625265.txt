root@212:/opt/tbgs# # Bekijk je Dockerfile
cat Dockerfile

# Check of de build commando's correct zijn
# Multi-stage build for TBGS application
FROM node:20-alpine AS builder

# Set working directory
WORKDIR /app

# Copy package files
COPY package*.json ./

# Install ALL dependencies (including dev deps for building)
RUN npm ci && npm cache clean --force

# Copy source code
COPY . .

# Build the application
RUN npm run build

# Production stage
FROM node:20-alpine AS production

# Install production dependencies
RUN apk add --no-cache \
    tini \
    && addgroup -g 1001 -S tbgs \
    && adduser -S tbgs -u 1001

# Set working directory
WORKDIR /app

# Copy package files and install production dependencies
COPY package*.json ./
RUN npm ci --only=production && npm cache clean --force

# Copy built application from builder stage
COPY --from=builder /app/dist ./dist
COPY --from=builder /app/server ./server
COPY --from=builder /app/shared ./shared

# Create uploads directory
RUN mkdir -p uploads && chown -R tbgs:tbgs /app

# Switch to non-root user
USER tbgs

# Expose port
EXPOSE 3000

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
  CMD node -e "require('http').get('http://localhost:3000/api/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"

# Use tini as entrypoint for proper signal handling
ENTRYPOINT ["/sbin/tini", "--"]

# Start the application
root@212:/opt/tbgs# # Ga in de container en debug# # Ga in de container en debug
docker-compose run tbgs-app sh

# Eenmaal binnen:
npm run build
ls -la server/
ls -la dist/
WARN[0000] /opt/tbgs/docker-compose.yml: the attribute `version` is obsolete, it will be ignored, please remove it to avoid potential confusion 
[+] Creating 2/2
 ✔ Container tbgs-postgres  Running                                                                                                                                                     0.0s 
 ✔ Container tbgs-redis     Running                                                                                                                                                     0.0s 
/app $ 
/app $ exit

> rest-express@1.0.0 build
> vite build && esbuild server/index.ts --platform=node --packages=external --bundle --format=esm --outdir=dist

file:///opt/tbgs/node_modules/vite/bin/vite.js:7
    await import('source-map-support').then((r) => r.default.install())
    ^^^^^

SyntaxError: Unexpected reserved word
    at Loader.moduleStrategy (internal/modules/esm/translators.js:133:18)
    at async link (internal/modules/esm/module_job.js:42:21)
total 168
drwxr-xr-x  2 root root  4096 Sep 13 20:28 .
drwxr-xr-x 13 root root  4096 Sep 13 20:28 ..
-rw-r--r--  1 root root   411 Sep 13 20:28 db.ts
-rw-r--r--  1 root root 10789 Sep 13 20:28 emailService.ts
-rw-r--r--  1 root root  6537 Sep  9 21:54 googlePlacesService.ts
-rw-r--r--  1 root root  6217 Sep  9 21:54 grippService.ts
-rw-r--r--  1 root root  9149 Sep  9 21:54 imageProcessor.ts
-rw-r--r--  1 root root   922 Sep 13 20:28 index.ts
-rw-r--r--  1 root root  5543 Sep  9 21:54 objectAcl.ts
-rw-r--r--  1 root root  9291 Sep  9 21:54 objectStorage.ts
-rw-r--r--  1 root root 50387 Sep 13 20:28 routes.ts
-rw-r--r--  1 root root  8345 Sep  9 21:54 storage.ts
-rw-r--r--  1 root root  9708 Sep  9 21:54 taskQueue.ts
-rw-r--r--  1 root root 11700 Sep  9 21:54 vcard.ts
-rw-r--r--  1 root root  2263 Sep  9 21:54 vite.ts
ls: cannot access 'dist/': No such file or directory
root@212:/opt/tbgs# 
