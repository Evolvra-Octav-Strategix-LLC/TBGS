
Deployment
See all the details of this deployment | 

Initializing deployment
Build dockerfile: ✅
Source Type: drop: ✅
#0 building with "default" instance using docker driver
#1 [internal] load build definition from dockerfile
#1 transferring dockerfile: 2.53kB done
#1 DONE 0.0s
#2 [internal] load metadata for docker.io/library/node:20-alpine
#2 DONE 0.7s
#3 [internal] load .dockerignore
#3 transferring context: 2B done
#3 DONE 0.0s
#4 [builder 1/5] FROM docker.io/library/node:20-alpine@sha256:eabac870db94f7342d6c33560d6613f188bbcf4bbe1f4eb47d5e2a08e1a37722
#4 CACHED
#5 [internal] load build context
#5 transferring context: 369.16kB 0.1s done
#5 DONE 0.1s
#6 [builder 2/5] WORKDIR /app
#6 CACHED
#7 [builder 3/5] COPY package*.json ./
#7 DONE 0.0s
#8 [production 2/8] RUN apk add --no-cache     curl     tini     ffmpeg     imagemagick     imagemagick-dev     libwebp-tools     && rm -rf /var/cache/apk/*
#8 0.214 fetch https://dl-cdn.alpinelinux.org/alpine/v3.22/main/x86_64/APKINDEX.tar.gz
#8 0.371 fetch https://dl-cdn.alpinelinux.org/alpine/v3.22/community/x86_64/APKINDEX.tar.gz
#8 0.841 (1/131) Installing brotli-libs (1.1.0-r2)
#8 0.868 (2/131) Installing c-ares (1.34.5-r0)
#8 0.882 (3/131) Installing libunistring (1.3-r0)
#8 0.921 (4/131) Installing libidn2 (2.3.7-r0)
#8 0.934 (5/131) Installing nghttp2-libs (1.65.0-r0)
#8 0.945 (6/131) Installing libpsl (0.21.5-r3)
#8 0.956 (7/131) Installing zstd-libs (1.5.7-r0)
#8 0.991 (8/131) Installing libcurl (8.14.1-r1)
#8 1.016 (9/131) Installing curl (8.14.1-r1)
#8 1.037 (10/131) Installing libSvtAv1Enc (2.3.0-r0)
#8 1.191 (11/131) Installing aom-libs (3.12.1-r0)
#8 1.332 (12/131) Installing libxau (1.0.12-r0)
#8 1.341 (13/131) Installing libmd (1.1.0-r0)
#8 1.350 (14/131) Installing libbsd (0.12.2-r0)
#8 1.360 (15/131) Installing libxdmcp (1.1.5-r1)
#8 1.374 (16/131) Installing libxcb (1.17.0-r0)
#8 1.403 (17/131) Installing libx11 (1.8.11-r0)
#8 1.485 (18/131) Installing hwdata-pci (0.395-r0)
#8 1.513 (19/131) Installing libpciaccess (0.18.1-r0)
#8 1.523 (20/131) Installing libdrm (2.4.124-r0)
#8 1.548 (21/131) Installing libxext (1.3.6-r2)
#8 1.573 (22/131) Installing libxfixes (6.0.1-r4)
#8 1.584 (23/131) Installing libffi (3.4.8-r0)
#8 1.593 (24/131) Installing wayland-libs-client (1.23.1-r3)
#8 1.603 (25/131) Installing libva (2.22.0-r1)
#8 1.617 (26/131) Installing libvdpau (1.5-r4)
#8 1.631 (27/131) Installing onevpl-libs (2023.3.1-r2)
#8 1.646 (28/131) Installing ffmpeg-libavutil (6.1.2-r2)
#8 1.676 (29/131) Installing libdav1d (1.5.1-r0)
#8 1.719 (30/131) Installing openexr-libiex (3.3.2-r0)
#8 1.735 (31/131) Installing openexr-libilmthread (3.3.2-r0)
#8 1.746 (32/131) Installing imath (3.1.12-r0)
#8 1.761 (33/131) Installing libdeflate (1.23-r0)
#8 1.774 (34/131) Installing openexr-libopenexrcore (3.3.2-r0)
#8 1.822 (35/131) Installing openexr-libopenexr (3.3.2-r0)
#8 1.851 (36/131) Installing giflib (5.2.2-r1)
#8 1.860 (37/131) Installing libhwy (1.0.7-r1)
#8 1.875 (38/131) Installing libjpeg-turbo (3.1.0-r0)
#8 1.896 (39/131) Installing lcms2 (2.16-r0)
#8 1.917 (40/131) Installing libpng (1.6.47-r0)
#8 1.933 (41/131) Installing libjxl (0.10.3-r2)
#8 2.023 (42/131) Installing lame-libs (3.100-r5)
#8 2.045 (43/131) Installing opus (1.5.2-r1)
#8 2.066 (44/131) Installing rav1e-libs (0.7.1-r0)
#8 2.115 (45/131) Installing libgomp (14.2.0-r6)
#8 2.133 (46/131) Installing soxr (0.1.3-r7)
#8 2.147 (47/131) Installing ffmpeg-libswresample (6.1.2-r2)
#8 2.159 (48/131) Installing libogg (1.3.5-r5)
#8 2.170 (49/131) Installing libtheora (1.1.1-r18)
#8 2.209 (50/131) Installing libvorbis (1.3.7-r2)
#8 2.234 (51/131) Installing libvpx (1.15.0-r0)
#8 2.306 (52/131) Installing libsharpyuv (1.5.0-r0)
#8 2.316 (53/131) Installing libwebp (1.5.0-r0)
#8 2.353 (54/131) Installing libwebpmux (1.5.0-r0)
#8 2.365 (55/131) Installing x264-libs (0.164.3108-r0)
#8 2.415 (56/131) Installing numactl (2.0.18-r0)
#8 2.426 (57/131) Installing x265-libs (3.6-r0)
#8 2.597 (58/131) Installing xvidcore (1.3.7-r2)
#8 2.614 (59/131) Installing ffmpeg-libavcodec (6.1.2-r2)
#8 2.922 (60/131) Installing sdl3 (3.2.16-r0)
#8 2.968 (61/131) Installing sdl2-compat (2.32.56-r0)
#8 2.986 (62/131) Installing alsa-lib (1.2.14-r0)
#8 3.029 (63/131) Installing libexpat (2.7.1-r0)
#8 3.041 (64/131) Installing libbz2 (1.0.8-r6)
#8 3.050 (65/131) Installing freetype (2.13.3-r0)
#8 3.074 (66/131) Installing fontconfig (2.15.0-r3)
#8 3.112 (67/131) Installing fribidi (1.0.16-r1)
#8 3.123 (68/131) Installing libintl (0.24.1-r0)
#8 3.134 (69/131) Installing libeconf (0.6.3-r0)
#8 3.145 (70/131) Installing libblkid (2.41-r9)
#8 3.158 (71/131) Installing libmount (2.41-r9)
#8 3.173 (72/131) Installing pcre2 (10.43-r1)
#8 3.197 (73/131) Installing glib (2.84.4-r0)
#8 3.297 (74/131) Installing graphite2 (1.3.14-r6)
#8 3.314 (75/131) Installing harfbuzz (11.2.1-r0)
#8 3.349 (76/131) Installing libunibreak (6.1-r0)
#8 3.362 (77/131) Installing libass (0.17.3-r0)
#8 3.380 (78/131) Installing libbluray (1.3.4-r1)
#8 3.400 (79/131) Installing mpg123-libs (1.32.10-r0)
#8 3.423 (80/131) Installing libopenmpt (0.7.15-r0)
#8 3.460 (81/131) Installing cjson (1.7.18-r1)
#8 3.469 (82/131) Installing mbedtls (3.6.4-r0)
#8 3.499 (83/131) Installing librist (0.2.10-r1)
#8 3.511 (84/131) Installing libsrt (1.5.3-r1)
#8 3.543 (85/131) Installing libssh (0.11.2-r0)
#8 3.565 (86/131) Installing xz-libs (5.8.1-r0)
#8 3.586 (87/131) Installing libxml2 (2.13.8-r0)
#8 3.619 (88/131) Installing libsodium (1.0.20-r0)
#8 3.642 (89/131) Installing libzmq (4.3.5-r2)
#8 3.664 (90/131) Installing ffmpeg-libavformat (6.1.2-r2)
#8 3.736 (91/131) Installing serd-libs (0.32.4-r0)
#8 3.748 (92/131) Installing zix-libs (0.6.2-r0)
#8 3.760 (93/131) Installing sord-libs (0.16.18-r0)
#8 3.780 (94/131) Installing sratom (0.6.18-r0)
#8 3.795 (95/131) Installing lilv-libs (0.24.26-r0)
#8 3.808 (96/131) Installing libdovi (3.3.1-r1)
#8 3.827 (97/131) Installing spirv-tools (1.4.313.0-r0)
#8 3.912 (98/131) Installing glslang-libs (1.4.309.0-r0)
#8 3.955 (99/131) Installing shaderc (2024.4-r0)
#8 3.970 (100/131) Installing vulkan-loader (1.4.313.0-r0)
#8 3.989 (101/131) Installing libplacebo (6.338.2-r3)
#8 4.018 (102/131) Installing ffmpeg-libpostproc (6.1.2-r2)
#8 4.029 (103/131) Installing ffmpeg-libswscale (6.1.2-r2)
#8 4.048 (104/131) Installing vidstab (1.1.1-r0)
#8 4.062 (105/131) Installing zimg (3.0.5-r3)
#8 4.092 (106/131) Installing ffmpeg-libavfilter (6.1.2-r2)
#8 4.189 (107/131) Installing libasyncns (0.8-r4)
#8 4.200 (108/131) Installing dbus-libs (1.16.2-r1)
#8 4.220 (109/131) Installing libltdl (2.5.4-r1)
#8 4.230 (110/131) Installing orc (0.4.40-r1)
#8 4.256 (111/131) Installing libflac (1.4.3-r1)
#8 4.274 (112/131) Installing libsndfile (1.2.2-r2)
#8 4.295 (113/131) Installing speexdsp (1.2.1-r2)
#8 4.309 (114/131) Installing tdb-libs (1.4.12-r0)
#8 4.320 (115/131) Installing libpulse (17.0-r5)
#8 4.355 (116/131) Installing v4l-utils-libs (1.28.1-r1)
#8 4.374 (117/131) Installing ffmpeg-libavdevice (6.1.2-r2)
#8 4.386 (118/131) Installing ffmpeg (6.1.2-r2)
#8 4.407 (119/131) Installing fftw-double-libs (3.3.10-r6)
#8 4.458 (120/131) Installing imagemagick-libs (7.1.2.0-r0)
#8 4.539 (121/131) Installing imagemagick (7.1.2.0-r0)
#8 4.641 (122/131) Installing imagemagick-jpeg (7.1.2.0-r0)
#8 4.655 (123/131) Installing imagemagick-openexr (7.1.2.0-r0)
#8 4.673 (124/131) Installing imagemagick-jxl (7.1.2.0-r0)
#8 4.685 (125/131) Installing libwebpdemux (1.5.0-r0)
#8 4.694 (126/131) Installing imagemagick-webp (7.1.2.0-r0)
#8 4.708 (127/131) Installing imagemagick-c++ (7.1.2.0-r0)
#8 4.727 (128/131) Installing pkgconf (2.4.3-r0)
#8 4.739 (129/131) Installing imagemagick-dev (7.1.2.0-r0)
#8 4.783 (130/131) Installing libwebp-tools (1.5.0-r0)
#8 4.803 (131/131) Installing tini (0.19.0-r3)
#8 4.817 Executing busybox-1.37.0-r18.trigger
#8 4.829 Executing glib-2.84.4-r0.trigger
#8 4.840 OK: 147 MiB in 149 packages
#8 DONE 5.3s
#9 [builder 4/5] RUN npm install --omit=dev && npm cache clean --force
#9 ...
#10 [production 3/8] RUN ffmpeg -version
#10 0.243 ffmpeg version 6.1.2 Copyright (c) 2000-2024 the FFmpeg developers
#10 0.243 built with gcc 14.2.0 (Alpine 14.2.0)
#10 0.243 configuration: --prefix=/usr --disable-librtmp --disable-lzma --disable-static --disable-stripping --enable-avfilter --enable-gpl --enable-ladspa --enable-libaom --enable-libass --enable-libbluray --enable-libdav1d --enable-libdrm --enable-libfontconfig --enable-libfreetype --enable-libfribidi --enable-libharfbuzz --enable-libmp3lame --enable-libopenmpt --enable-libopus --enable-libplacebo --enable-libpulse --enable-librav1e --enable-librist --enable-libsoxr --enable-libsrt --enable-libssh --enable-libtheora --enable-libv4l2 --enable-libvidstab --enable-libvorbis --enable-libvpx --enable-libwebp --enable-libx264 --enable-libx265 --enable-libxcb --enable-libxml2 --enable-libxvid --enable-libzimg --enable-libzmq --enable-lto=auto --enable-lv2 --enable-openssl --enable-pic --enable-postproc --enable-pthreads --enable-shared --enable-vaapi --enable-vdpau --enable-version3 --enable-vulkan --optflags=-O3 --enable-libjxl --enable-libsvtav1 --enable-libvpl
#10 0.243 libavutil      58. 29.100 / 58. 29.100
#10 0.244 libavcodec     60. 31.102 / 60. 31.102
#10 0.244 libavformat    60. 16.100 / 60. 16.100
#10 0.244 libavdevice    60.  3.100 / 60.  3.100
#10 0.244 libavfilter     9. 12.100 /  9. 12.100
#10 0.244 libswscale      7.  5.100 /  7.  5.100
#10 0.244 libswresample   4. 12.100 /  4. 12.100
#10 0.244 libpostproc    57.  3.100 / 57.  3.100
#10 DONE 0.3s
#11 [production 4/8] RUN addgroup -g 1001 -S tbgs &&     adduser -S tbgs -u 1001
#11 DONE 0.2s
#9 [builder 4/5] RUN npm install --omit=dev && npm cache clean --force
#9 ...
#12 [production 5/8] WORKDIR /app
#12 DONE 0.0s
#13 [production 6/8] RUN mkdir -p uploads processed templates &&     chown -R tbgs:tbgs /app
#13 DONE 0.3s
#9 [builder 4/5] RUN npm install --omit=dev && npm cache clean --force
#9 10.04 npm warn deprecated multer@1.4.5-lts.2: Multer 1.x is impacted by a number of vulnerabilities, which have been patched in 2.x. You should upgrade to the latest 2.x version.
#9 10.36 npm warn deprecated fluent-ffmpeg@2.1.3: Package no longer supported. Contact Support at https://www.npmjs.com/support for more info.
#9 10.62
#9 10.62 added 124 packages, and audited 125 packages in 10s
#9 10.62
#9 10.62 21 packages are looking for funding
#9 10.62   run `npm fund` for details
#9 10.62
#9 10.62 found 0 vulnerabilities
#9 10.62 npm notice
#9 10.62 npm notice New major version of npm available! 10.8.2 -> 11.6.0
#9 10.62 npm notice Changelog: https://github.com/npm/cli/releases/tag/v11.6.0
#9 10.62 npm notice To update run: npm install -g npm@11.6.0
#9 10.62 npm notice
#9 10.80 npm warn using --force Recommended protections disabled.
#9 DONE 11.4s
#14 [builder 5/5] COPY . .
#14 DONE 0.0s
#15 [production 7/8] COPY --from=builder --chown=tbgs:tbgs /app .
#15 DONE 0.4s
#16 [production 8/8] RUN echo "# TBGS Email Service Enhanced - Environment Variables" > .env.example &&     echo "PORT=3000" >> .env.example &&     echo "SMTP_HOST=smtp.gmail.com" >> .env.example &&     echo "SMTP_PORT=587" >> .env.example &&     echo "SMTP_USER=your-email@gmail.com" >> .env.example &&     echo "SMTP_PASS=your-app-password" >> .env.example &&     echo "CONTACT_RECEIVER=admin@tbgs.nl" >> .env.example &&     echo "CORS_ORIGINS=https://tbgs.nl,https://api.evolvra.ai" >> .env.example &&     echo "FFMPEG_PATH=/usr/bin/ffmpeg" >> .env.example &&     chown tbgs:tbgs .env.example
#16 DONE 0.3s
#17 exporting to image
#17 exporting layers
#17 exporting layers 0.5s done
#17 writing image sha256:391d87a413e0a7c5ccdf9f6d02f7db606982e226ae72cc5400d00d32dcba1655 done
#17 naming to docker.io/library/tbgsemail-backend-zgyfky done
#17 DONE 0.5s
Docker Deployed: ✅