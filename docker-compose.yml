version: '3.8'

services:
  # TBGS Web Application
  tbgs-app:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: tbgs-app
    restart: unless-stopped
    env_file:
      - .env.production
    environment:
      - NODE_ENV=production
      - PORT=3000
      - DATABASE_URL=postgresql://tbgs_user:TBGSSecure2024!Production@postgres:5432/tbgs_production
      - REDIS_URL=redis://redis:6379
    depends_on:
      - postgres
      - redis
    volumes:
      - ./uploads:/app/uploads
    networks:
      - tbgs-network

  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: tbgs-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: tbgs_production
      POSTGRES_USER: tbgs_user
      POSTGRES_PASSWORD: TBGSSecure2024!Production
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./postgres-init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - tbgs-network

  # Redis for Sessions
  redis:
    image: redis:7-alpine
    container_name: tbgs-redis
    restart: unless-stopped
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    networks:
      - tbgs-network

  # Nextcloud for File Storage
  nextcloud:
    image: nextcloud:28-apache
    container_name: tbgs-nextcloud
    restart: unless-stopped
    environment:
      POSTGRES_HOST: postgres
      POSTGRES_DB: nextcloud
      POSTGRES_USER: nextcloud_user
      POSTGRES_PASSWORD: NextcloudSecure2024!
      NEXTCLOUD_ADMIN_USER: admin
      NEXTCLOUD_ADMIN_PASSWORD: TBGSNextcloudAdmin2024!
      NEXTCLOUD_TRUSTED_DOMAINS: nextcloud.tbgs.nl tbgs.nl
      OVERWRITEPROTOCOL: https
      OVERWRITEHOST: nextcloud.tbgs.nl
    volumes:
      - nextcloud_data:/var/www/html
      - nextcloud_apps:/var/www/html/custom_apps
      - nextcloud_config:/var/www/html/config
      - ./nextcloud/uploads:/var/www/html/data
    depends_on:
      - postgres
    networks:
      - tbgs-network

  # Nginx Proxy Manager - Web-based SSL and Domain Management
  nginx-proxy-manager:
    image: 'jc21/nginx-proxy-manager:latest'
    container_name: tbgs-nginx-proxy-manager
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
      - "81:81"  # Admin web interface
    volumes:
      - npm_data:/data
      - npm_letsencrypt:/etc/letsencrypt
    environment:
      DB_SQLITE_FILE: "/data/database.sqlite"
    depends_on:
      - tbgs-app
      - nextcloud
      - portainer
    networks:
      - tbgs-network

  # Portainer for Container Management
  portainer:
    image: portainer/portainer-ce:latest
    container_name: tbgs-portainer
    restart: unless-stopped
    command: -H unix:///var/run/docker.sock
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
    networks:
      - tbgs-network

volumes:
  postgres_data:
  redis_data:
  nextcloud_data:
  nextcloud_apps:
  nextcloud_config:
  portainer_data:
  npm_data:
  npm_letsencrypt:

networks:
  tbgs-network:
    driver: bridge